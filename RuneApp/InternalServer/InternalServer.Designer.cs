//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace RuneApp.InternalServer {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class InternalServer {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal InternalServer() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("RuneApp.InternalServer.InternalServer", typeof(InternalServer).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to &lt;!DOCTYPE html&gt;
        ///
        ///&lt;html lang=&quot;en&quot; xmlns=&quot;http://www.w3.org/1999/xhtml&quot;&gt;
        ///&lt;head&gt;
        ///	&lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=utf-8&quot;/&gt;
        ///	&lt;meta charset=&quot;utf-8&quot; /&gt;
        ///	&lt;title&gt;{title}&lt;/title&gt;
        ///	&lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;{theme}&quot;/&gt;
        ///{head}
        ///&lt;/head&gt;
        ///&lt;body&gt;
        ///{body}
        ///&lt;/body&gt;
        ///&lt;/html&gt;.
        /// </summary>
        internal static string default_tpl {
            get {
                return ResourceManager.GetString("default_tpl", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to @media only screen and (min-resolution: 192dpi),
        ///	   only screen and (min-resolution: 2dppx) {
        ///	body {
        ///		font-size: 1.5em;
        ///	}
        ///}
        ///.rune-container {
        ///	display: flex;
        ///	flex-wrap: wrap;
        ///	justify-content: space-between;
        ///	align-items: flex-start;
        ///}
        ///.rune-box {
        ///	display: inline-flex;
        ///	flex-direction: column;
        ///	border: 1px solid black;
        ///	border-radius: 5pt;
        ///	margin: 1pt;
        ///	padding: 1pt;
        ///}
        ///.rune-icon {
        ///	text-align: center;
        ///	vertical-align: middle;
        ///	background-position-x: center;
        ///	background-positi [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string runes_css {
            get {
                return ResourceManager.GetString("runes_css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Theme preview!&lt;br /&gt;
        ///&lt;button&gt;Click&lt;/button&gt;&lt;br /&gt;
        ///&lt;a href=&quot;{guid}&quot; class=&quot;link&quot;&gt;Sample Link&lt;/a&gt;&amp;nbsp;
        ///&lt;a class=&quot;link_visited&quot; href=&quot;/css&quot;&gt;Visited link&lt;/a&gt;
        ///&lt;br /&gt;
        ///&lt;br /&gt;
        ///&lt;ul&gt;
        ///	&lt;li&gt;List item&lt;/li&gt;
        ///	&lt;li&gt;Another&lt;/li&gt;
        ///&lt;/ul&gt;.
        /// </summary>
        internal static string theme_preview {
            get {
                return ResourceManager.GetString("theme_preview", resourceCulture);
            }
        }
    }
}
